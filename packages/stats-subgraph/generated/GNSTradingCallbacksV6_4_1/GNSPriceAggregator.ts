// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CallbackExecuted extends ethereum.Event {
  get params(): CallbackExecuted__Params {
    return new CallbackExecuted__Params(this);
  }
}

export class CallbackExecuted__Params {
  _event: CallbackExecuted;

  constructor(event: CallbackExecuted) {
    this._event = event;
  }

  get a(): CallbackExecutedAStruct {
    return changetype<CallbackExecutedAStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }

  get orderType(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class CallbackExecutedAStruct extends ethereum.Tuple {
  get orderId(): BigInt {
    return this[0].toBigInt();
  }

  get price(): BigInt {
    return this[1].toBigInt();
  }

  get spreadP(): BigInt {
    return this[2].toBigInt();
  }

  get open(): BigInt {
    return this[3].toBigInt();
  }

  get high(): BigInt {
    return this[4].toBigInt();
  }

  get low(): BigInt {
    return this[5].toBigInt();
  }
}

export class ChainlinkCancelled extends ethereum.Event {
  get params(): ChainlinkCancelled__Params {
    return new ChainlinkCancelled__Params(this);
  }
}

export class ChainlinkCancelled__Params {
  _event: ChainlinkCancelled;

  constructor(event: ChainlinkCancelled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkFulfilled extends ethereum.Event {
  get params(): ChainlinkFulfilled__Params {
    return new ChainlinkFulfilled__Params(this);
  }
}

export class ChainlinkFulfilled__Params {
  _event: ChainlinkFulfilled;

  constructor(event: ChainlinkFulfilled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkRequested extends ethereum.Event {
  get params(): ChainlinkRequested__Params {
    return new ChainlinkRequested__Params(this);
  }
}

export class ChainlinkRequested__Params {
  _event: ChainlinkRequested;

  constructor(event: ChainlinkRequested) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class CollateralPriceFeedUpdated extends ethereum.Event {
  get params(): CollateralPriceFeedUpdated__Params {
    return new CollateralPriceFeedUpdated__Params(this);
  }
}

export class CollateralPriceFeedUpdated__Params {
  _event: CollateralPriceFeedUpdated;

  constructor(event: CollateralPriceFeedUpdated) {
    this._event = event;
  }

  get value(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class JobIdUpdated extends ethereum.Event {
  get params(): JobIdUpdated__Params {
    return new JobIdUpdated__Params(this);
  }
}

export class JobIdUpdated__Params {
  _event: JobIdUpdated;

  constructor(event: JobIdUpdated) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get jobId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class LinkPriceFeedUpdated extends ethereum.Event {
  get params(): LinkPriceFeedUpdated__Params {
    return new LinkPriceFeedUpdated__Params(this);
  }
}

export class LinkPriceFeedUpdated__Params {
  _event: LinkPriceFeedUpdated;

  constructor(event: LinkPriceFeedUpdated) {
    this._event = event;
  }

  get value(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MinAnswersUpdated extends ethereum.Event {
  get params(): MinAnswersUpdated__Params {
    return new MinAnswersUpdated__Params(this);
  }
}

export class MinAnswersUpdated__Params {
  _event: MinAnswersUpdated;

  constructor(event: MinAnswersUpdated) {
    this._event = event;
  }

  get value(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NodeAdded extends ethereum.Event {
  get params(): NodeAdded__Params {
    return new NodeAdded__Params(this);
  }
}

export class NodeAdded__Params {
  _event: NodeAdded;

  constructor(event: NodeAdded) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get value(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NodeRemoved extends ethereum.Event {
  get params(): NodeRemoved__Params {
    return new NodeRemoved__Params(this);
  }
}

export class NodeRemoved__Params {
  _event: NodeRemoved;

  constructor(event: NodeRemoved) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldNode(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NodeReplaced extends ethereum.Event {
  get params(): NodeReplaced__Params {
    return new NodeReplaced__Params(this);
  }
}

export class NodeReplaced__Params {
  _event: NodeReplaced;

  constructor(event: NodeReplaced) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldNode(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newNode(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class PairsStorageUpdated extends ethereum.Event {
  get params(): PairsStorageUpdated__Params {
    return new PairsStorageUpdated__Params(this);
  }
}

export class PairsStorageUpdated__Params {
  _event: PairsStorageUpdated;

  constructor(event: PairsStorageUpdated) {
    this._event = event;
  }

  get value(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PriceReceived extends ethereum.Event {
  get params(): PriceReceived__Params {
    return new PriceReceived__Params(this);
  }
}

export class PriceReceived__Params {
  _event: PriceReceived;

  constructor(event: PriceReceived) {
    this._event = event;
  }

  get request(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get orderId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get node(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get pairIndex(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get referencePrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get linkFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get isLookback(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get usedInMedian(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }
}

export class PriceRequested extends ethereum.Event {
  get params(): PriceRequested__Params {
    return new PriceRequested__Params(this);
  }
}

export class PriceRequested__Params {
  _event: PriceRequested;

  constructor(event: PriceRequested) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get job(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get pairIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get orderType(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get nodesCount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get linkFeePerNode(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get fromBlock(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get isLookback(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }
}

export class TwapIntervalUpdated extends ethereum.Event {
  get params(): TwapIntervalUpdated__Params {
    return new TwapIntervalUpdated__Params(this);
  }
}

export class TwapIntervalUpdated__Params {
  _event: TwapIntervalUpdated;

  constructor(event: TwapIntervalUpdated) {
    this._event = event;
  }

  get newValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UniV3PoolUpdated extends ethereum.Event {
  get params(): UniV3PoolUpdated__Params {
    return new UniV3PoolUpdated__Params(this);
  }
}

export class UniV3PoolUpdated__Params {
  _event: UniV3PoolUpdated;

  constructor(event: UniV3PoolUpdated) {
    this._event = event;
  }

  get newValue(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GNSPriceAggregator__lookbackOrderAnswersResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getOpen(): BigInt {
    return this.value0;
  }

  getHigh(): BigInt {
    return this.value1;
  }

  getLow(): BigInt {
    return this.value2;
  }

  getTs(): BigInt {
    return this.value3;
  }
}

export class GNSPriceAggregator__ordersResult {
  value0: i32;
  value1: BigInt;
  value2: i32;
  value3: boolean;
  value4: boolean;

  constructor(
    value0: i32,
    value1: BigInt,
    value2: i32,
    value3: boolean,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getPairIndex(): i32 {
    return this.value0;
  }

  getLinkFeePerNode(): BigInt {
    return this.value1;
  }

  getOrderType(): i32 {
    return this.value2;
  }

  getActive(): boolean {
    return this.value3;
  }

  getIsLookback(): boolean {
    return this.value4;
  }
}

export class GNSPriceAggregator extends ethereum.SmartContract {
  static bind(address: Address): GNSPriceAggregator {
    return new GNSPriceAggregator("GNSPriceAggregator", address);
  }

  collateralPriceFeed(): Address {
    let result = super.call(
      "collateralPriceFeed",
      "collateralPriceFeed():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_collateralPriceFeed(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "collateralPriceFeed",
      "collateralPriceFeed():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCollateralDecimalDifference(): BigInt {
    let result = super.call(
      "getCollateralDecimalDifference",
      "getCollateralDecimalDifference():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCollateralDecimalDifference(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollateralDecimalDifference",
      "getCollateralDecimalDifference():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollateralPrecision(): BigInt {
    let result = super.call(
      "getCollateralPrecision",
      "getCollateralPrecision():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCollateralPrecision(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollateralPrecision",
      "getCollateralPrecision():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPrice(
    pairIndex: BigInt,
    orderType: i32,
    leveragedPosDai: BigInt,
    fromBlock: BigInt
  ): BigInt {
    let result = super.call(
      "getPrice",
      "getPrice(uint256,uint8,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(pairIndex),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(orderType)),
        ethereum.Value.fromUnsignedBigInt(leveragedPosDai),
        ethereum.Value.fromUnsignedBigInt(fromBlock)
      ]
    );

    return result[0].toBigInt();
  }

  try_getPrice(
    pairIndex: BigInt,
    orderType: i32,
    leveragedPosDai: BigInt,
    fromBlock: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPrice",
      "getPrice(uint256,uint8,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(pairIndex),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(orderType)),
        ethereum.Value.fromUnsignedBigInt(leveragedPosDai),
        ethereum.Value.fromUnsignedBigInt(fromBlock)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isGnsToken0InLp(): boolean {
    let result = super.call("isGnsToken0InLp", "isGnsToken0InLp():(bool)", []);

    return result[0].toBoolean();
  }

  try_isGnsToken0InLp(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isGnsToken0InLp",
      "isGnsToken0InLp():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  jobIds(param0: BigInt): Bytes {
    let result = super.call("jobIds", "jobIds(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBytes();
  }

  try_jobIds(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("jobIds", "jobIds(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  linkFee(pairIndex: BigInt, leveragedPosDai: BigInt): BigInt {
    let result = super.call("linkFee", "linkFee(uint256,uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(pairIndex),
      ethereum.Value.fromUnsignedBigInt(leveragedPosDai)
    ]);

    return result[0].toBigInt();
  }

  try_linkFee(
    pairIndex: BigInt,
    leveragedPosDai: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "linkFee",
      "linkFee(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(pairIndex),
        ethereum.Value.fromUnsignedBigInt(leveragedPosDai)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  linkPriceFeed(): Address {
    let result = super.call("linkPriceFeed", "linkPriceFeed():(address)", []);

    return result[0].toAddress();
  }

  try_linkPriceFeed(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "linkPriceFeed",
      "linkPriceFeed():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  lookbackOrderAnswers(
    param0: BigInt,
    param1: BigInt
  ): GNSPriceAggregator__lookbackOrderAnswersResult {
    let result = super.call(
      "lookbackOrderAnswers",
      "lookbackOrderAnswers(uint256,uint256):(uint64,uint64,uint64,uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new GNSPriceAggregator__lookbackOrderAnswersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_lookbackOrderAnswers(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<GNSPriceAggregator__lookbackOrderAnswersResult> {
    let result = super.tryCall(
      "lookbackOrderAnswers",
      "lookbackOrderAnswers(uint256,uint256):(uint64,uint64,uint64,uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GNSPriceAggregator__lookbackOrderAnswersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  minAnswers(): BigInt {
    let result = super.call("minAnswers", "minAnswers():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minAnswers(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minAnswers", "minAnswers():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nodes(param0: BigInt): Address {
    let result = super.call("nodes", "nodes(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_nodes(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("nodes", "nodes(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  openFeeP(pairIndex: BigInt): BigInt {
    let result = super.call("openFeeP", "openFeeP(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(pairIndex)
    ]);

    return result[0].toBigInt();
  }

  try_openFeeP(pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("openFeeP", "openFeeP(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(pairIndex)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  orderIdByRequest(param0: Bytes): BigInt {
    let result = super.call(
      "orderIdByRequest",
      "orderIdByRequest(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toBigInt();
  }

  try_orderIdByRequest(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "orderIdByRequest",
      "orderIdByRequest(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  orders(param0: BigInt): GNSPriceAggregator__ordersResult {
    let result = super.call(
      "orders",
      "orders(uint256):(uint16,uint112,uint8,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new GNSPriceAggregator__ordersResult(
      result[0].toI32(),
      result[1].toBigInt(),
      result[2].toI32(),
      result[3].toBoolean(),
      result[4].toBoolean()
    );
  }

  try_orders(
    param0: BigInt
  ): ethereum.CallResult<GNSPriceAggregator__ordersResult> {
    let result = super.tryCall(
      "orders",
      "orders(uint256):(uint16,uint112,uint8,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GNSPriceAggregator__ordersResult(
        value[0].toI32(),
        value[1].toBigInt(),
        value[2].toI32(),
        value[3].toBoolean(),
        value[4].toBoolean()
      )
    );
  }

  ordersAnswers(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "ordersAnswers",
      "ordersAnswers(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_ordersAnswers(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ordersAnswers",
      "ordersAnswers(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pairsStorage(): Address {
    let result = super.call("pairsStorage", "pairsStorage():(address)", []);

    return result[0].toAddress();
  }

  try_pairsStorage(): ethereum.CallResult<Address> {
    let result = super.tryCall("pairsStorage", "pairsStorage():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  storageT(): Address {
    let result = super.call("storageT", "storageT():(address)", []);

    return result[0].toAddress();
  }

  try_storageT(): ethereum.CallResult<Address> {
    let result = super.tryCall("storageT", "storageT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenPriceDai(): BigInt {
    let result = super.call("tokenPriceDai", "tokenPriceDai():(uint256)", []);

    return result[0].toBigInt();
  }

  try_tokenPriceDai(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenPriceDai",
      "tokenPriceDai():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  twapInterval(): BigInt {
    let result = super.call("twapInterval", "twapInterval():(uint32)", []);

    return result[0].toBigInt();
  }

  try_twapInterval(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("twapInterval", "twapInterval():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  uniV3Pool(): Address {
    let result = super.call("uniV3Pool", "uniV3Pool():(address)", []);

    return result[0].toAddress();
  }

  try_uniV3Pool(): ethereum.CallResult<Address> {
    let result = super.tryCall("uniV3Pool", "uniV3Pool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _linkToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenDaiLp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _twapInterval(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _storageT(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _pairsStorage(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _linkPriceFeed(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _collateralPriceFeed(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _minAnswers(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _nodes(): Array<Address> {
    return this._call.inputValues[8].value.toAddressArray();
  }

  get _jobIds(): Array<Bytes> {
    return this._call.inputValues[9].value.toBytesArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddNodeCall extends ethereum.Call {
  get inputs(): AddNodeCall__Inputs {
    return new AddNodeCall__Inputs(this);
  }

  get outputs(): AddNodeCall__Outputs {
    return new AddNodeCall__Outputs(this);
  }
}

export class AddNodeCall__Inputs {
  _call: AddNodeCall;

  constructor(call: AddNodeCall) {
    this._call = call;
  }

  get a(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddNodeCall__Outputs {
  _call: AddNodeCall;

  constructor(call: AddNodeCall) {
    this._call = call;
  }
}

export class ClaimBackLinkCall extends ethereum.Call {
  get inputs(): ClaimBackLinkCall__Inputs {
    return new ClaimBackLinkCall__Inputs(this);
  }

  get outputs(): ClaimBackLinkCall__Outputs {
    return new ClaimBackLinkCall__Outputs(this);
  }
}

export class ClaimBackLinkCall__Inputs {
  _call: ClaimBackLinkCall;

  constructor(call: ClaimBackLinkCall) {
    this._call = call;
  }
}

export class ClaimBackLinkCall__Outputs {
  _call: ClaimBackLinkCall;

  constructor(call: ClaimBackLinkCall) {
    this._call = call;
  }
}

export class FulfillCall extends ethereum.Call {
  get inputs(): FulfillCall__Inputs {
    return new FulfillCall__Inputs(this);
  }

  get outputs(): FulfillCall__Outputs {
    return new FulfillCall__Outputs(this);
  }
}

export class FulfillCall__Inputs {
  _call: FulfillCall;

  constructor(call: FulfillCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get priceData(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FulfillCall__Outputs {
  _call: FulfillCall;

  constructor(call: FulfillCall) {
    this._call = call;
  }
}

export class GetPriceCall extends ethereum.Call {
  get inputs(): GetPriceCall__Inputs {
    return new GetPriceCall__Inputs(this);
  }

  get outputs(): GetPriceCall__Outputs {
    return new GetPriceCall__Outputs(this);
  }
}

export class GetPriceCall__Inputs {
  _call: GetPriceCall;

  constructor(call: GetPriceCall) {
    this._call = call;
  }

  get pairIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get orderType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get leveragedPosDai(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get fromBlock(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class GetPriceCall__Outputs {
  _call: GetPriceCall;

  constructor(call: GetPriceCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RemoveNodeCall extends ethereum.Call {
  get inputs(): RemoveNodeCall__Inputs {
    return new RemoveNodeCall__Inputs(this);
  }

  get outputs(): RemoveNodeCall__Outputs {
    return new RemoveNodeCall__Outputs(this);
  }
}

export class RemoveNodeCall__Inputs {
  _call: RemoveNodeCall;

  constructor(call: RemoveNodeCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveNodeCall__Outputs {
  _call: RemoveNodeCall;

  constructor(call: RemoveNodeCall) {
    this._call = call;
  }
}

export class ReplaceNodeCall extends ethereum.Call {
  get inputs(): ReplaceNodeCall__Inputs {
    return new ReplaceNodeCall__Inputs(this);
  }

  get outputs(): ReplaceNodeCall__Outputs {
    return new ReplaceNodeCall__Outputs(this);
  }
}

export class ReplaceNodeCall__Inputs {
  _call: ReplaceNodeCall;

  constructor(call: ReplaceNodeCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get a(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ReplaceNodeCall__Outputs {
  _call: ReplaceNodeCall;

  constructor(call: ReplaceNodeCall) {
    this._call = call;
  }
}

export class SetLimitJobIdCall extends ethereum.Call {
  get inputs(): SetLimitJobIdCall__Inputs {
    return new SetLimitJobIdCall__Inputs(this);
  }

  get outputs(): SetLimitJobIdCall__Outputs {
    return new SetLimitJobIdCall__Outputs(this);
  }
}

export class SetLimitJobIdCall__Inputs {
  _call: SetLimitJobIdCall;

  constructor(call: SetLimitJobIdCall) {
    this._call = call;
  }

  get jobId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetLimitJobIdCall__Outputs {
  _call: SetLimitJobIdCall;

  constructor(call: SetLimitJobIdCall) {
    this._call = call;
  }
}

export class SetMarketJobIdCall extends ethereum.Call {
  get inputs(): SetMarketJobIdCall__Inputs {
    return new SetMarketJobIdCall__Inputs(this);
  }

  get outputs(): SetMarketJobIdCall__Outputs {
    return new SetMarketJobIdCall__Outputs(this);
  }
}

export class SetMarketJobIdCall__Inputs {
  _call: SetMarketJobIdCall;

  constructor(call: SetMarketJobIdCall) {
    this._call = call;
  }

  get jobId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetMarketJobIdCall__Outputs {
  _call: SetMarketJobIdCall;

  constructor(call: SetMarketJobIdCall) {
    this._call = call;
  }
}

export class UpdateCollateralPriceFeedCall extends ethereum.Call {
  get inputs(): UpdateCollateralPriceFeedCall__Inputs {
    return new UpdateCollateralPriceFeedCall__Inputs(this);
  }

  get outputs(): UpdateCollateralPriceFeedCall__Outputs {
    return new UpdateCollateralPriceFeedCall__Outputs(this);
  }
}

export class UpdateCollateralPriceFeedCall__Inputs {
  _call: UpdateCollateralPriceFeedCall;

  constructor(call: UpdateCollateralPriceFeedCall) {
    this._call = call;
  }

  get value(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateCollateralPriceFeedCall__Outputs {
  _call: UpdateCollateralPriceFeedCall;

  constructor(call: UpdateCollateralPriceFeedCall) {
    this._call = call;
  }
}

export class UpdateLinkPriceFeedCall extends ethereum.Call {
  get inputs(): UpdateLinkPriceFeedCall__Inputs {
    return new UpdateLinkPriceFeedCall__Inputs(this);
  }

  get outputs(): UpdateLinkPriceFeedCall__Outputs {
    return new UpdateLinkPriceFeedCall__Outputs(this);
  }
}

export class UpdateLinkPriceFeedCall__Inputs {
  _call: UpdateLinkPriceFeedCall;

  constructor(call: UpdateLinkPriceFeedCall) {
    this._call = call;
  }

  get value(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateLinkPriceFeedCall__Outputs {
  _call: UpdateLinkPriceFeedCall;

  constructor(call: UpdateLinkPriceFeedCall) {
    this._call = call;
  }
}

export class UpdateMinAnswersCall extends ethereum.Call {
  get inputs(): UpdateMinAnswersCall__Inputs {
    return new UpdateMinAnswersCall__Inputs(this);
  }

  get outputs(): UpdateMinAnswersCall__Outputs {
    return new UpdateMinAnswersCall__Outputs(this);
  }
}

export class UpdateMinAnswersCall__Inputs {
  _call: UpdateMinAnswersCall;

  constructor(call: UpdateMinAnswersCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMinAnswersCall__Outputs {
  _call: UpdateMinAnswersCall;

  constructor(call: UpdateMinAnswersCall) {
    this._call = call;
  }
}

export class UpdatePairsStorageCall extends ethereum.Call {
  get inputs(): UpdatePairsStorageCall__Inputs {
    return new UpdatePairsStorageCall__Inputs(this);
  }

  get outputs(): UpdatePairsStorageCall__Outputs {
    return new UpdatePairsStorageCall__Outputs(this);
  }
}

export class UpdatePairsStorageCall__Inputs {
  _call: UpdatePairsStorageCall;

  constructor(call: UpdatePairsStorageCall) {
    this._call = call;
  }

  get value(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdatePairsStorageCall__Outputs {
  _call: UpdatePairsStorageCall;

  constructor(call: UpdatePairsStorageCall) {
    this._call = call;
  }
}

export class UpdateTwapIntervalCall extends ethereum.Call {
  get inputs(): UpdateTwapIntervalCall__Inputs {
    return new UpdateTwapIntervalCall__Inputs(this);
  }

  get outputs(): UpdateTwapIntervalCall__Outputs {
    return new UpdateTwapIntervalCall__Outputs(this);
  }
}

export class UpdateTwapIntervalCall__Inputs {
  _call: UpdateTwapIntervalCall;

  constructor(call: UpdateTwapIntervalCall) {
    this._call = call;
  }

  get _twapInterval(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateTwapIntervalCall__Outputs {
  _call: UpdateTwapIntervalCall;

  constructor(call: UpdateTwapIntervalCall) {
    this._call = call;
  }
}

export class UpdateUniV3PoolCall extends ethereum.Call {
  get inputs(): UpdateUniV3PoolCall__Inputs {
    return new UpdateUniV3PoolCall__Inputs(this);
  }

  get outputs(): UpdateUniV3PoolCall__Outputs {
    return new UpdateUniV3PoolCall__Outputs(this);
  }
}

export class UpdateUniV3PoolCall__Inputs {
  _call: UpdateUniV3PoolCall;

  constructor(call: UpdateUniV3PoolCall) {
    this._call = call;
  }

  get _uniV3Pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateUniV3PoolCall__Outputs {
  _call: UpdateUniV3PoolCall;

  constructor(call: UpdateUniV3PoolCall) {
    this._call = call;
  }
}
