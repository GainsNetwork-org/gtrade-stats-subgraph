// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FeeAdded extends ethereum.Event {
  get params(): FeeAdded__Params {
    return new FeeAdded__Params(this);
  }
}

export class FeeAdded__Params {
  _event: FeeAdded;

  constructor(event: FeeAdded) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class FeeUpdated extends ethereum.Event {
  get params(): FeeUpdated__Params {
    return new FeeUpdated__Params(this);
  }
}

export class FeeUpdated__Params {
  _event: FeeUpdated;

  constructor(event: FeeUpdated) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class GroupAdded extends ethereum.Event {
  get params(): GroupAdded__Params {
    return new GroupAdded__Params(this);
  }
}

export class GroupAdded__Params {
  _event: GroupAdded;

  constructor(event: GroupAdded) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class GroupUpdated extends ethereum.Event {
  get params(): GroupUpdated__Params {
    return new GroupUpdated__Params(this);
  }
}

export class GroupUpdated__Params {
  _event: GroupUpdated;

  constructor(event: GroupUpdated) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class PairAdded extends ethereum.Event {
  get params(): PairAdded__Params {
    return new PairAdded__Params(this);
  }
}

export class PairAdded__Params {
  _event: PairAdded;

  constructor(event: PairAdded) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): string {
    return this._event.parameters[1].value.toString();
  }

  get to(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class PairUpdated extends ethereum.Event {
  get params(): PairUpdated__Params {
    return new PairUpdated__Params(this);
  }
}

export class PairUpdated__Params {
  _event: PairUpdated;

  constructor(event: PairUpdated) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class GNSPairsStorageV6__feesResult {
  value0: string;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(
    value0: string,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getOpenFeeP(): BigInt {
    return this.value1;
  }

  getCloseFeeP(): BigInt {
    return this.value2;
  }

  getOracleFeeP(): BigInt {
    return this.value3;
  }

  getNftLimitOrderFeeP(): BigInt {
    return this.value4;
  }

  getReferralFeeP(): BigInt {
    return this.value5;
  }

  getMinLevPosDai(): BigInt {
    return this.value6;
  }
}

export class GNSPairsStorageV6__groupsResult {
  value0: string;
  value1: Bytes;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: string,
    value1: Bytes,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getJob(): Bytes {
    return this.value1;
  }

  getMinLeverage(): BigInt {
    return this.value2;
  }

  getMaxLeverage(): BigInt {
    return this.value3;
  }

  getMaxCollateralP(): BigInt {
    return this.value4;
  }
}

export class GNSPairsStorageV6__pairFeedResultValue0Struct extends ethereum.Tuple {
  get feed1(): Address {
    return this[0].toAddress();
  }

  get feed2(): Address {
    return this[1].toAddress();
  }

  get feedCalculation(): i32 {
    return this[2].toI32();
  }

  get maxDeviationP(): BigInt {
    return this[3].toBigInt();
  }
}

export class GNSPairsStorageV6__pairJobResult {
  value0: string;
  value1: string;
  value2: Bytes;
  value3: BigInt;

  constructor(value0: string, value1: string, value2: Bytes, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromFixedBytes(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getValue0(): string {
    return this.value0;
  }

  getValue1(): string {
    return this.value1;
  }

  getValue2(): Bytes {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }
}

export class GNSPairsStorageV6__pairsResultFeedStruct extends ethereum.Tuple {
  get feed1(): Address {
    return this[0].toAddress();
  }

  get feed2(): Address {
    return this[1].toAddress();
  }

  get feedCalculation(): i32 {
    return this[2].toI32();
  }

  get maxDeviationP(): BigInt {
    return this[3].toBigInt();
  }
}

export class GNSPairsStorageV6__pairsResult {
  value0: string;
  value1: string;
  value2: GNSPairsStorageV6__pairsResultFeedStruct;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: GNSPairsStorageV6__pairsResultFeedStruct,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromTuple(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getFrom(): string {
    return this.value0;
  }

  getTo(): string {
    return this.value1;
  }

  getFeed(): GNSPairsStorageV6__pairsResultFeedStruct {
    return this.value2;
  }

  getSpreadP(): BigInt {
    return this.value3;
  }

  getGroupIndex(): BigInt {
    return this.value4;
  }

  getFeeIndex(): BigInt {
    return this.value5;
  }
}

export class GNSPairsStorageV6__pairsBackendResultValue0Struct extends ethereum.Tuple {
  get from(): string {
    return this[0].toString();
  }

  get to(): string {
    return this[1].toString();
  }

  get feed(): GNSPairsStorageV6__pairsBackendResultValue0FeedStruct {
    return changetype<GNSPairsStorageV6__pairsBackendResultValue0FeedStruct>(
      this[2].toTuple()
    );
  }

  get spreadP(): BigInt {
    return this[3].toBigInt();
  }

  get groupIndex(): BigInt {
    return this[4].toBigInt();
  }

  get feeIndex(): BigInt {
    return this[5].toBigInt();
  }
}

export class GNSPairsStorageV6__pairsBackendResultValue0FeedStruct extends ethereum.Tuple {
  get feed1(): Address {
    return this[0].toAddress();
  }

  get feed2(): Address {
    return this[1].toAddress();
  }

  get feedCalculation(): i32 {
    return this[2].toI32();
  }

  get maxDeviationP(): BigInt {
    return this[3].toBigInt();
  }
}

export class GNSPairsStorageV6__pairsBackendResultValue1Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get job(): Bytes {
    return this[1].toBytes();
  }

  get minLeverage(): BigInt {
    return this[2].toBigInt();
  }

  get maxLeverage(): BigInt {
    return this[3].toBigInt();
  }

  get maxCollateralP(): BigInt {
    return this[4].toBigInt();
  }
}

export class GNSPairsStorageV6__pairsBackendResultValue2Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get openFeeP(): BigInt {
    return this[1].toBigInt();
  }

  get closeFeeP(): BigInt {
    return this[2].toBigInt();
  }

  get oracleFeeP(): BigInt {
    return this[3].toBigInt();
  }

  get nftLimitOrderFeeP(): BigInt {
    return this[4].toBigInt();
  }

  get referralFeeP(): BigInt {
    return this[5].toBigInt();
  }

  get minLevPosDai(): BigInt {
    return this[6].toBigInt();
  }
}

export class GNSPairsStorageV6__pairsBackendResult {
  value0: GNSPairsStorageV6__pairsBackendResultValue0Struct;
  value1: GNSPairsStorageV6__pairsBackendResultValue1Struct;
  value2: GNSPairsStorageV6__pairsBackendResultValue2Struct;

  constructor(
    value0: GNSPairsStorageV6__pairsBackendResultValue0Struct,
    value1: GNSPairsStorageV6__pairsBackendResultValue1Struct,
    value2: GNSPairsStorageV6__pairsBackendResultValue2Struct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    map.set("value2", ethereum.Value.fromTuple(this.value2));
    return map;
  }

  getValue0(): GNSPairsStorageV6__pairsBackendResultValue0Struct {
    return this.value0;
  }

  getValue1(): GNSPairsStorageV6__pairsBackendResultValue1Struct {
    return this.value1;
  }

  getValue2(): GNSPairsStorageV6__pairsBackendResultValue2Struct {
    return this.value2;
  }
}

export class GNSPairsStorageV6 extends ethereum.SmartContract {
  static bind(address: Address): GNSPairsStorageV6 {
    return new GNSPairsStorageV6("GNSPairsStorageV6", address);
  }

  currentOrderId(): BigInt {
    let result = super.call("currentOrderId", "currentOrderId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentOrderId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentOrderId",
      "currentOrderId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fees(param0: BigInt): GNSPairsStorageV6__feesResult {
    let result = super.call(
      "fees",
      "fees(uint256):(string,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new GNSPairsStorageV6__feesResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt()
    );
  }

  try_fees(param0: BigInt): ethereum.CallResult<GNSPairsStorageV6__feesResult> {
    let result = super.tryCall(
      "fees",
      "fees(uint256):(string,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GNSPairsStorageV6__feesResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt()
      )
    );
  }

  feesCount(): BigInt {
    let result = super.call("feesCount", "feesCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feesCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("feesCount", "feesCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  groupCollateral(_pairIndex: BigInt, _long: boolean): BigInt {
    let result = super.call(
      "groupCollateral",
      "groupCollateral(uint256,bool):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_pairIndex),
        ethereum.Value.fromBoolean(_long)
      ]
    );

    return result[0].toBigInt();
  }

  try_groupCollateral(
    _pairIndex: BigInt,
    _long: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "groupCollateral",
      "groupCollateral(uint256,bool):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_pairIndex),
        ethereum.Value.fromBoolean(_long)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  groupMaxCollateral(_pairIndex: BigInt): BigInt {
    let result = super.call(
      "groupMaxCollateral",
      "groupMaxCollateral(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return result[0].toBigInt();
  }

  try_groupMaxCollateral(_pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "groupMaxCollateral",
      "groupMaxCollateral(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  groups(param0: BigInt): GNSPairsStorageV6__groupsResult {
    let result = super.call(
      "groups",
      "groups(uint256):(string,bytes32,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new GNSPairsStorageV6__groupsResult(
      result[0].toString(),
      result[1].toBytes(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_groups(
    param0: BigInt
  ): ethereum.CallResult<GNSPairsStorageV6__groupsResult> {
    let result = super.tryCall(
      "groups",
      "groups(uint256):(string,bytes32,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GNSPairsStorageV6__groupsResult(
        value[0].toString(),
        value[1].toBytes(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  groupsCollaterals(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "groupsCollaterals",
      "groupsCollaterals(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_groupsCollaterals(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "groupsCollaterals",
      "groupsCollaterals(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  groupsCount(): BigInt {
    let result = super.call("groupsCount", "groupsCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_groupsCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("groupsCount", "groupsCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  guaranteedSlEnabled(_pairIndex: BigInt): boolean {
    let result = super.call(
      "guaranteedSlEnabled",
      "guaranteedSlEnabled(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return result[0].toBoolean();
  }

  try_guaranteedSlEnabled(_pairIndex: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "guaranteedSlEnabled",
      "guaranteedSlEnabled(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPairListed(param0: string, param1: string): boolean {
    let result = super.call(
      "isPairListed",
      "isPairListed(string,string):(bool)",
      [ethereum.Value.fromString(param0), ethereum.Value.fromString(param1)]
    );

    return result[0].toBoolean();
  }

  try_isPairListed(
    param0: string,
    param1: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPairListed",
      "isPairListed(string,string):(bool)",
      [ethereum.Value.fromString(param0), ethereum.Value.fromString(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pairCloseFeeP(_pairIndex: BigInt): BigInt {
    let result = super.call(
      "pairCloseFeeP",
      "pairCloseFeeP(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return result[0].toBigInt();
  }

  try_pairCloseFeeP(_pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pairCloseFeeP",
      "pairCloseFeeP(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pairFeed(_pairIndex: BigInt): GNSPairsStorageV6__pairFeedResultValue0Struct {
    let result = super.call(
      "pairFeed",
      "pairFeed(uint256):((address,address,uint8,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return changetype<GNSPairsStorageV6__pairFeedResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_pairFeed(
    _pairIndex: BigInt
  ): ethereum.CallResult<GNSPairsStorageV6__pairFeedResultValue0Struct> {
    let result = super.tryCall(
      "pairFeed",
      "pairFeed(uint256):((address,address,uint8,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<GNSPairsStorageV6__pairFeedResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  pairJob(_pairIndex: BigInt): GNSPairsStorageV6__pairJobResult {
    let result = super.call(
      "pairJob",
      "pairJob(uint256):(string,string,bytes32,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return new GNSPairsStorageV6__pairJobResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBytes(),
      result[3].toBigInt()
    );
  }

  try_pairJob(
    _pairIndex: BigInt
  ): ethereum.CallResult<GNSPairsStorageV6__pairJobResult> {
    let result = super.tryCall(
      "pairJob",
      "pairJob(uint256):(string,string,bytes32,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GNSPairsStorageV6__pairJobResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBytes(),
        value[3].toBigInt()
      )
    );
  }

  pairMaxLeverage(_pairIndex: BigInt): BigInt {
    let result = super.call(
      "pairMaxLeverage",
      "pairMaxLeverage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return result[0].toBigInt();
  }

  try_pairMaxLeverage(_pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pairMaxLeverage",
      "pairMaxLeverage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pairMinLevPosDai(_pairIndex: BigInt): BigInt {
    let result = super.call(
      "pairMinLevPosDai",
      "pairMinLevPosDai(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return result[0].toBigInt();
  }

  try_pairMinLevPosDai(_pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pairMinLevPosDai",
      "pairMinLevPosDai(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pairMinLeverage(_pairIndex: BigInt): BigInt {
    let result = super.call(
      "pairMinLeverage",
      "pairMinLeverage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return result[0].toBigInt();
  }

  try_pairMinLeverage(_pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pairMinLeverage",
      "pairMinLeverage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pairNftLimitOrderFeeP(_pairIndex: BigInt): BigInt {
    let result = super.call(
      "pairNftLimitOrderFeeP",
      "pairNftLimitOrderFeeP(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return result[0].toBigInt();
  }

  try_pairNftLimitOrderFeeP(_pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pairNftLimitOrderFeeP",
      "pairNftLimitOrderFeeP(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pairOpenFeeP(_pairIndex: BigInt): BigInt {
    let result = super.call("pairOpenFeeP", "pairOpenFeeP(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_pairIndex)
    ]);

    return result[0].toBigInt();
  }

  try_pairOpenFeeP(_pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pairOpenFeeP",
      "pairOpenFeeP(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pairOracleFeeP(_pairIndex: BigInt): BigInt {
    let result = super.call(
      "pairOracleFeeP",
      "pairOracleFeeP(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return result[0].toBigInt();
  }

  try_pairOracleFeeP(_pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pairOracleFeeP",
      "pairOracleFeeP(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pairReferralFeeP(_pairIndex: BigInt): BigInt {
    let result = super.call(
      "pairReferralFeeP",
      "pairReferralFeeP(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );

    return result[0].toBigInt();
  }

  try_pairReferralFeeP(_pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pairReferralFeeP",
      "pairReferralFeeP(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pairSpreadP(_pairIndex: BigInt): BigInt {
    let result = super.call("pairSpreadP", "pairSpreadP(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_pairIndex)
    ]);

    return result[0].toBigInt();
  }

  try_pairSpreadP(_pairIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pairSpreadP",
      "pairSpreadP(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pairIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pairs(param0: BigInt): GNSPairsStorageV6__pairsResult {
    let result = super.call(
      "pairs",
      "pairs(uint256):(string,string,(address,address,uint8,uint256),uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new GNSPairsStorageV6__pairsResult(
      result[0].toString(),
      result[1].toString(),
      changetype<GNSPairsStorageV6__pairsResultFeedStruct>(result[2].toTuple()),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_pairs(
    param0: BigInt
  ): ethereum.CallResult<GNSPairsStorageV6__pairsResult> {
    let result = super.tryCall(
      "pairs",
      "pairs(uint256):(string,string,(address,address,uint8,uint256),uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GNSPairsStorageV6__pairsResult(
        value[0].toString(),
        value[1].toString(),
        changetype<GNSPairsStorageV6__pairsResultFeedStruct>(
          value[2].toTuple()
        ),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  pairsBackend(_index: BigInt): GNSPairsStorageV6__pairsBackendResult {
    let result = super.call(
      "pairsBackend",
      "pairsBackend(uint256):((string,string,(address,address,uint8,uint256),uint256,uint256,uint256),(string,bytes32,uint256,uint256,uint256),(string,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );

    return changetype<GNSPairsStorageV6__pairsBackendResult>(
      new GNSPairsStorageV6__pairsBackendResult(
        changetype<GNSPairsStorageV6__pairsBackendResultValue0Struct>(
          result[0].toTuple()
        ),
        changetype<GNSPairsStorageV6__pairsBackendResultValue1Struct>(
          result[1].toTuple()
        ),
        changetype<GNSPairsStorageV6__pairsBackendResultValue2Struct>(
          result[2].toTuple()
        )
      )
    );
  }

  try_pairsBackend(
    _index: BigInt
  ): ethereum.CallResult<GNSPairsStorageV6__pairsBackendResult> {
    let result = super.tryCall(
      "pairsBackend",
      "pairsBackend(uint256):((string,string,(address,address,uint8,uint256),uint256,uint256,uint256),(string,bytes32,uint256,uint256,uint256),(string,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<GNSPairsStorageV6__pairsBackendResult>(
        new GNSPairsStorageV6__pairsBackendResult(
          changetype<GNSPairsStorageV6__pairsBackendResultValue0Struct>(
            value[0].toTuple()
          ),
          changetype<GNSPairsStorageV6__pairsBackendResultValue1Struct>(
            value[1].toTuple()
          ),
          changetype<GNSPairsStorageV6__pairsBackendResultValue2Struct>(
            value[2].toTuple()
          )
        )
      )
    );
  }

  pairsCount(): BigInt {
    let result = super.call("pairsCount", "pairsCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_pairsCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("pairsCount", "pairsCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  storageT(): Address {
    let result = super.call("storageT", "storageT():(address)", []);

    return result[0].toAddress();
  }

  try_storageT(): ethereum.CallResult<Address> {
    let result = super.tryCall("storageT", "storageT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddFeeCall extends ethereum.Call {
  get inputs(): AddFeeCall__Inputs {
    return new AddFeeCall__Inputs(this);
  }

  get outputs(): AddFeeCall__Outputs {
    return new AddFeeCall__Outputs(this);
  }
}

export class AddFeeCall__Inputs {
  _call: AddFeeCall;

  constructor(call: AddFeeCall) {
    this._call = call;
  }

  get _fee(): AddFeeCall_feeStruct {
    return changetype<AddFeeCall_feeStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class AddFeeCall__Outputs {
  _call: AddFeeCall;

  constructor(call: AddFeeCall) {
    this._call = call;
  }
}

export class AddFeeCall_feeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get openFeeP(): BigInt {
    return this[1].toBigInt();
  }

  get closeFeeP(): BigInt {
    return this[2].toBigInt();
  }

  get oracleFeeP(): BigInt {
    return this[3].toBigInt();
  }

  get nftLimitOrderFeeP(): BigInt {
    return this[4].toBigInt();
  }

  get referralFeeP(): BigInt {
    return this[5].toBigInt();
  }

  get minLevPosDai(): BigInt {
    return this[6].toBigInt();
  }
}

export class AddGroupCall extends ethereum.Call {
  get inputs(): AddGroupCall__Inputs {
    return new AddGroupCall__Inputs(this);
  }

  get outputs(): AddGroupCall__Outputs {
    return new AddGroupCall__Outputs(this);
  }
}

export class AddGroupCall__Inputs {
  _call: AddGroupCall;

  constructor(call: AddGroupCall) {
    this._call = call;
  }

  get _group(): AddGroupCall_groupStruct {
    return changetype<AddGroupCall_groupStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class AddGroupCall__Outputs {
  _call: AddGroupCall;

  constructor(call: AddGroupCall) {
    this._call = call;
  }
}

export class AddGroupCall_groupStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get job(): Bytes {
    return this[1].toBytes();
  }

  get minLeverage(): BigInt {
    return this[2].toBigInt();
  }

  get maxLeverage(): BigInt {
    return this[3].toBigInt();
  }

  get maxCollateralP(): BigInt {
    return this[4].toBigInt();
  }
}

export class AddPairCall extends ethereum.Call {
  get inputs(): AddPairCall__Inputs {
    return new AddPairCall__Inputs(this);
  }

  get outputs(): AddPairCall__Outputs {
    return new AddPairCall__Outputs(this);
  }
}

export class AddPairCall__Inputs {
  _call: AddPairCall;

  constructor(call: AddPairCall) {
    this._call = call;
  }

  get _pair(): AddPairCall_pairStruct {
    return changetype<AddPairCall_pairStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class AddPairCall__Outputs {
  _call: AddPairCall;

  constructor(call: AddPairCall) {
    this._call = call;
  }
}

export class AddPairCall_pairStruct extends ethereum.Tuple {
  get from(): string {
    return this[0].toString();
  }

  get to(): string {
    return this[1].toString();
  }

  get feed(): AddPairCall_pairFeedStruct {
    return changetype<AddPairCall_pairFeedStruct>(this[2].toTuple());
  }

  get spreadP(): BigInt {
    return this[3].toBigInt();
  }

  get groupIndex(): BigInt {
    return this[4].toBigInt();
  }

  get feeIndex(): BigInt {
    return this[5].toBigInt();
  }
}

export class AddPairCall_pairFeedStruct extends ethereum.Tuple {
  get feed1(): Address {
    return this[0].toAddress();
  }

  get feed2(): Address {
    return this[1].toAddress();
  }

  get feedCalculation(): i32 {
    return this[2].toI32();
  }

  get maxDeviationP(): BigInt {
    return this[3].toBigInt();
  }
}

export class AddPairsCall extends ethereum.Call {
  get inputs(): AddPairsCall__Inputs {
    return new AddPairsCall__Inputs(this);
  }

  get outputs(): AddPairsCall__Outputs {
    return new AddPairsCall__Outputs(this);
  }
}

export class AddPairsCall__Inputs {
  _call: AddPairsCall;

  constructor(call: AddPairsCall) {
    this._call = call;
  }

  get _pairs(): Array<AddPairsCall_pairsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      AddPairsCall_pairsStruct
    >();
  }
}

export class AddPairsCall__Outputs {
  _call: AddPairsCall;

  constructor(call: AddPairsCall) {
    this._call = call;
  }
}

export class AddPairsCall_pairsStruct extends ethereum.Tuple {
  get from(): string {
    return this[0].toString();
  }

  get to(): string {
    return this[1].toString();
  }

  get feed(): AddPairsCall_pairsFeedStruct {
    return changetype<AddPairsCall_pairsFeedStruct>(this[2].toTuple());
  }

  get spreadP(): BigInt {
    return this[3].toBigInt();
  }

  get groupIndex(): BigInt {
    return this[4].toBigInt();
  }

  get feeIndex(): BigInt {
    return this[5].toBigInt();
  }
}

export class AddPairsCall_pairsFeedStruct extends ethereum.Tuple {
  get feed1(): Address {
    return this[0].toAddress();
  }

  get feed2(): Address {
    return this[1].toAddress();
  }

  get feedCalculation(): i32 {
    return this[2].toI32();
  }

  get maxDeviationP(): BigInt {
    return this[3].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _storageT(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _currentOrderId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PairJobCall extends ethereum.Call {
  get inputs(): PairJobCall__Inputs {
    return new PairJobCall__Inputs(this);
  }

  get outputs(): PairJobCall__Outputs {
    return new PairJobCall__Outputs(this);
  }
}

export class PairJobCall__Inputs {
  _call: PairJobCall;

  constructor(call: PairJobCall) {
    this._call = call;
  }

  get _pairIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PairJobCall__Outputs {
  _call: PairJobCall;

  constructor(call: PairJobCall) {
    this._call = call;
  }

  get value0(): string {
    return this._call.outputValues[0].value.toString();
  }

  get value1(): string {
    return this._call.outputValues[1].value.toString();
  }

  get value2(): Bytes {
    return this._call.outputValues[2].value.toBytes();
  }

  get value3(): BigInt {
    return this._call.outputValues[3].value.toBigInt();
  }
}

export class UpdateFeeCall extends ethereum.Call {
  get inputs(): UpdateFeeCall__Inputs {
    return new UpdateFeeCall__Inputs(this);
  }

  get outputs(): UpdateFeeCall__Outputs {
    return new UpdateFeeCall__Outputs(this);
  }
}

export class UpdateFeeCall__Inputs {
  _call: UpdateFeeCall;

  constructor(call: UpdateFeeCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _fee(): UpdateFeeCall_feeStruct {
    return changetype<UpdateFeeCall_feeStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class UpdateFeeCall__Outputs {
  _call: UpdateFeeCall;

  constructor(call: UpdateFeeCall) {
    this._call = call;
  }
}

export class UpdateFeeCall_feeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get openFeeP(): BigInt {
    return this[1].toBigInt();
  }

  get closeFeeP(): BigInt {
    return this[2].toBigInt();
  }

  get oracleFeeP(): BigInt {
    return this[3].toBigInt();
  }

  get nftLimitOrderFeeP(): BigInt {
    return this[4].toBigInt();
  }

  get referralFeeP(): BigInt {
    return this[5].toBigInt();
  }

  get minLevPosDai(): BigInt {
    return this[6].toBigInt();
  }
}

export class UpdateGroupCall extends ethereum.Call {
  get inputs(): UpdateGroupCall__Inputs {
    return new UpdateGroupCall__Inputs(this);
  }

  get outputs(): UpdateGroupCall__Outputs {
    return new UpdateGroupCall__Outputs(this);
  }
}

export class UpdateGroupCall__Inputs {
  _call: UpdateGroupCall;

  constructor(call: UpdateGroupCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _group(): UpdateGroupCall_groupStruct {
    return changetype<UpdateGroupCall_groupStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class UpdateGroupCall__Outputs {
  _call: UpdateGroupCall;

  constructor(call: UpdateGroupCall) {
    this._call = call;
  }
}

export class UpdateGroupCall_groupStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get job(): Bytes {
    return this[1].toBytes();
  }

  get minLeverage(): BigInt {
    return this[2].toBigInt();
  }

  get maxLeverage(): BigInt {
    return this[3].toBigInt();
  }

  get maxCollateralP(): BigInt {
    return this[4].toBigInt();
  }
}

export class UpdateGroupCollateralCall extends ethereum.Call {
  get inputs(): UpdateGroupCollateralCall__Inputs {
    return new UpdateGroupCollateralCall__Inputs(this);
  }

  get outputs(): UpdateGroupCollateralCall__Outputs {
    return new UpdateGroupCollateralCall__Outputs(this);
  }
}

export class UpdateGroupCollateralCall__Inputs {
  _call: UpdateGroupCollateralCall;

  constructor(call: UpdateGroupCollateralCall) {
    this._call = call;
  }

  get _pairIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _long(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get _increase(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class UpdateGroupCollateralCall__Outputs {
  _call: UpdateGroupCollateralCall;

  constructor(call: UpdateGroupCollateralCall) {
    this._call = call;
  }
}

export class UpdatePairCall extends ethereum.Call {
  get inputs(): UpdatePairCall__Inputs {
    return new UpdatePairCall__Inputs(this);
  }

  get outputs(): UpdatePairCall__Outputs {
    return new UpdatePairCall__Outputs(this);
  }
}

export class UpdatePairCall__Inputs {
  _call: UpdatePairCall;

  constructor(call: UpdatePairCall) {
    this._call = call;
  }

  get _pairIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _pair(): UpdatePairCall_pairStruct {
    return changetype<UpdatePairCall_pairStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class UpdatePairCall__Outputs {
  _call: UpdatePairCall;

  constructor(call: UpdatePairCall) {
    this._call = call;
  }
}

export class UpdatePairCall_pairStruct extends ethereum.Tuple {
  get from(): string {
    return this[0].toString();
  }

  get to(): string {
    return this[1].toString();
  }

  get feed(): UpdatePairCall_pairFeedStruct {
    return changetype<UpdatePairCall_pairFeedStruct>(this[2].toTuple());
  }

  get spreadP(): BigInt {
    return this[3].toBigInt();
  }

  get groupIndex(): BigInt {
    return this[4].toBigInt();
  }

  get feeIndex(): BigInt {
    return this[5].toBigInt();
  }
}

export class UpdatePairCall_pairFeedStruct extends ethereum.Tuple {
  get feed1(): Address {
    return this[0].toAddress();
  }

  get feed2(): Address {
    return this[1].toAddress();
  }

  get feedCalculation(): i32 {
    return this[2].toI32();
  }

  get maxDeviationP(): BigInt {
    return this[3].toBigInt();
  }
}
